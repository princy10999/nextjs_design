import Head from "next/head";
import React, { useState } from "react";
import { Button, Col, Input, InputGroup, InputGroupText, Modal, ModalBody, ModalHeader, Progress, Row } from "reactstrap";
import styles from "./project.module.css";
import Header from '../../components/Header/Header';
import mockData from './mockProjectData.json';
import Clipboard from "../../images/clipboard-text.svg"
import Search from "../../images/search.svg"
import filter from "../../images/filter.svg"
import Message from "../../images/message-notif.svg"
import View from "../../images/eye.svg"
import Image from "next/image";
import Vector from "../../images/Vector.svg"
import Close from "../../images/close-circle.svg"
import { useRouter } from 'next/router';
import MultiRangeSlider from "../../components/multiRangeSlider/MultiRangeSlider";
import Select from 'react-select';
import { selectStyles } from "../../constant";
import DatePicker from "react-datepicker";
import "react-datepicker/dist/react-datepicker.css";

const Index = ({ projectData }) => {
    const [startDate, setStartDate] = useState(new Date());
    const [endDate, setEndDate] = useState(new Date());
    const router = useRouter();
    const [modal, setModal] = useState(false);

    const stateOptions = [
        { value: 'one', label: 'One' },
        { value: 'two', label: 'Two' },
        { value: 'three', label: 'Three' }
    ];

    const projectOptions = [
        { value: 'one', label: 'One' },
        { value: 'two', label: 'Two' },
        { value: 'three', label: 'Three' }
    ];

    return (
        <>
            <Head>
                <title>Project</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <Header />
            <div className='px-2 px-lg-0'>
                <div className="my-5 container cu-container">
                    <div className="d-flex mt-3 px-0 px-lg-2 justify-content-between align-items-center flex-wrap">
                        <div className="d-flex"> <Image src={Clipboard} alt='image' /><span className="mx-2 axiformaSemiBold">Project Inquiries</span></div>
                        <div className=" d-flex mt-3 mt-lg-0">
                            <InputGroup>
                                <InputGroupText><Image src={Search} alt='image' /></InputGroupText>
                                <Input
                                    type="text"
                                    placeholder="Search"
                                    className="form-control me-1 border-left"
                                />
                            </InputGroup>
                            <button className="btn align-items-center d-flex bg-button"><Image src={filter} alt='image' /></button>
                        </div>
                    </div>
                    <div className={`mt-3 ${styles.tableBorder}`}>
                        <div className="table-responsive">
                            <table className="table table-hover">
                                <thead >
                                    <tr>
                                        <th className="ps-5 text-nowrap  py-3" scope="col">#</th>
                                        <th className="py-3 text-nowrap " scope="col">Name</th>
                                        <th className="py-3 text-nowrap " scope="col">Project Type</th>
                                        <th className="py-3 text-nowrap " scope="col">State</th>
                                        <th className="py-3 text-nowrap " scope="col">Est. Budget</th>
                                        <th className="py-3 text-nowrap " scope="col">Chat</th>
                                        <th className="py-3 text-nowrap " scope="col">View Details</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    {projectData.map((project, index) => {
                                        return (
                                            <tr key={project.id} className={'align-items-center text-nowrap ' + (`${styles.TableRow}`)} >
                                                <td className="ps-5" scope="row">{index + 1}</td>
                                                <td onClick={() => { router.push('/project/Inquiries'); }} role='button'>{project.name}</td>
                                                <td>{project.projectType}</td>
                                                <td>{project.state}</td>
                                                <td>{project.estBudget}</td>
                                                <td><Image src={Message} alt='image' className={`${styles.message}`} /></td>
                                                <td><div role='button' className="view d-flex align-item-center justify-content-center" onClick={() => setModal(!modal)}><Image src={View} alt='image' /></div></td>
                                            </tr>
                                        );
                                    })}
                                </tbody>
                            </table>
                        </div>
                        <div className="d-flex justify-content-between px-lg-5 px-2 mb-4">
                            <nav aria-label="...">
                                <ul className="pagination">
                                    <li className="page-item active">
                                        <button className="page-link" >
                                            1
                                        </button>
                                    </li>
                                    <li className="page-item ">
                                        <button className="page-link" >
                                            2
                                        </button>
                                    </li>
                                    <li className="page-item">
                                        <button className="page-link" >
                                            3
                                        </button>
                                    </li>
                                    <li className="page-item">
                                        <button className="page-link">
                                            <Image src={Vector} alt='image' />
                                        </button>
                                    </li>
                                </ul>
                            </nav>
                            <div>
                                <span className="theme-text-color">Showing 10 of 50 entries</span>
                            </div>
                        </div>
                    </div>
                    <Modal
                        isOpen={modal}
                        toggle={() => setModal(!modal)}
                        centered={true}
                    >
                        <ModalHeader toggle={() => setModal(!modal)} className={"f-20 axiformaSemiBold theme-color " + (`${styles.modalHeader}`)} close={<Image role='button' src={Close} onClick={() => setModal(!modal)} alt='image' />}>
                            Filter
                        </ModalHeader>
                        <ModalBody className={`${styles.modalBody}`}>
                            <div className="mb-3">
                                <label for="customRange1" className="form-label f-14 theme-color">
                                    Budget
                                </label>
                                <div className="my-3 mb-5 w-100">
                                    <MultiRangeSlider min={0} max={50000} />
                                </div>
                                {/* <Progress className="my-2" value="25">
                                25%
                            </Progress> */}
                            </div>
                            <div className="mb-3 mt-5 pt-2">
                                <label className="mb-2 f-14 theme-color">State</label>
                                <Select options={stateOptions} className='h-40' classNamePrefix="select" styles={selectStyles} />
                            </div>
                            <div className="mb-3">
                                <label className="mb-3 f-14 theme-color">Project type</label>
                                <Select options={projectOptions} className='h-40 text-black focus:outline-none' classNamePrefix="select" styles={selectStyles} />
                            </div>
                            <Row>
                                <Col lg={6}>
                                    <div className="mb-3">
                                        <label for="fromDate" className="form-label f-14 theme-color">
                                            From Date
                                        </label>
                                        <DatePicker selected={startDate} onChange={(date) => setStartDate(date)} className="datepicker w-100 px-2" />
                                    </div>
                                </Col>
                                <Col lg={6}>
                                    <div className="mb-3">
                                        <label for="toDate" className="form-label f-14 theme-color">
                                            To Date
                                        </label>
                                        <DatePicker selected={endDate} onChange={(date) => setEndDate(date)} className="datepicker w-100 px-2" />
                                    </div>
                                </Col>
                            </Row>
                            <div className="text-center my-2 mt-3">
                                <Button className="px-5 w-75 h-40 f-16 bg-button">Apply</Button>
                            </div>
                        </ModalBody>
                    </Modal>
                </div>
            </div>
        </>
    );
};

export const getServerSideProps = async () => {
    return {
        props: {
            projectData: mockData,
        },
    };
};

export default Index;